?start: exp

id: CNAME

cte_num: INT -> int
       | FLOAT -> float

cte_string: ESCAPED_STRING

factor: id -> factor_id
      | PLUS id -> positive_factor_id
      | MINUS id -> negative_factor_id
      | cte_num -> factor_cte_num
      | PLUS cte_num -> positive_cte_num
      | MINUS cte_num -> negative_cte_num
//      | LPAREN expresion RPAREN -> parenthesis_expresion

?term: factor
    | factor (MULT factor)+ -> term_mult
    | factor (DIV factor)+ -> term_div

?exp: term
   | term (PLUS term)+ -> exp_plus
   | term (MINUS term)+ -> exp_minus

// 
// Tokens 
// 

// PALABRAS RESERVADAS
PROGRAM: "program"
MAIN: "main"
END: "end"
CONST: "const"
VAR: "var"
VOID: "void"
WHILE: "while"
DO: "do"
IF: "if"
ELSE: "else"
PRINT: "print"
TYPE: "float" | "int"

// SIMBOLOS
ASSIGN: "="
COLON: ":"
SEMICOLON: ";"
COMMA: ","
LPAREN: "("
RPAREN: ")"
LBRACE: "{"
RBRACE: "}"
LBRACKET: "["
RBRACKET: "]"
PLUS: "+"
MINUS: "-"
MULT: "*"
DIV: "/"
GT: ">"
LT: "<"
GTE: ">="
LTE: "<="
NE: "!="
EE: "=="

%import common.WS
%import common.CNAME
%import common.INT
%import common.FLOAT
%import common.ESCAPED_STRING

%ignore WS