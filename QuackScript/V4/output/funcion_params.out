Parse Tree:
program_func_no_decl
  program
  id	TestParams
  ;
  function_no_var_decl
    void
    id	sum
    (
    params_list
      id	a
      :
      int_type
      ,
      id	b
      :
      int_type
    )
    [
    body_statements
      {
      print_multiple
        print
        (
        cte_string	"Sum:"
        ,
        exp_plus
          factor_id
            id	a
          +
          factor_id
            id	b
        )
        ;
      }
    ]
    ;
  function_no_var_decl
    void
    id	subs
    (
    params_list
      id	a
      :
      int_type
      ,
      id	b
      :
      int_type
    )
    [
    body_statements
      {
      print_multiple
        print
        (
        cte_string	"Subs:"
        ,
        exp_minus
          factor_id
            id	a
          -
          factor_id
            id	b
        )
        ;
      }
    ]
    ;
  main
  body_statements
    {
    func_call_multiple_params
      id	sum
      (
      factor_cte_num
        int	3
      ,
      factor_cte_num
        int	4
      )
      ;
    func_call_multiple_params
      id	subs
      (
      factor_cte_num
        int	3
      ,
      factor_cte_num
        int	4
      )
      ;
    }
  end

IR:
('program', 'TestParams', [], [('function_decl', 'sum', ('params', [('a', 'int'), ('b', 'int')]), ('body_statements', [('print', [('cte_string', 'Sum:'), ('exp_plus', ('id', 'a'), ('id', 'b')), Token('SEMICOLON', ';')])]), []), ('function_decl', 'subs', ('params', [('a', 'int'), ('b', 'int')]), ('body_statements', [('print', [('cte_string', 'Subs:'), ('exp_minus', ('id', 'a'), ('id', 'b')), Token('SEMICOLON', ';')])]), [])], ('body_statements', [('func_call', 'sum', [('cte_num', 3), ('cte_num', 4)]), ('func_call', 'subs', [('cte_num', 3), ('cte_num', 4)])]))

Symbol Table:
Container: global
  Parameters:
  Symbols:
Container: sum
  Parameters:
  a: int, None, param, 0
  b: int, None, param, 1
  Symbols:
Container: subs
  Parameters:
  a: int, None, param, 0
  b: int, None, param, 1
  Symbols:

