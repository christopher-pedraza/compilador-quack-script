Parse Tree:
program_decl_no_func
  program_pt1	program
  program_pt2
    id	TestExpr
    ;
  var_single_decl_assign
    var
    id	x
    :
    int_type
    =
    factor_cte_num
      int	5
    ;
  var_single_decl_no_assign
    var
    id	y
    :
    int_type
    ;
  var_single_decl_assign
    var
    id	z
    :
    int_type
    =
    negative_cte_num
      -
      int	3
    ;
  main
  body_statements
    {
    assign
      id	y
      =
      term_mult
        parenthesis_expresion
          (
          exp_minus
            term_mult
              parenthesis_expresion
                (
                exp_plus
                  factor_id
                    id	x
                  +
                  factor_cte_num
                    int	3
                )
              *
              factor_cte_num
                int	2
            -
            term_div
              factor_cte_num
                int	4
              /
              factor_cte_num
                int	2
          )
        *
        factor_id
          id	z
      ;
    print_single
      print
      (
      factor_id
        id	y
      )
      ;
    }
  end

IR:
ProgramNode(name='TestExpr', global_decls=[VarDeclNode(names=[IdNode(name='x')], var_type='int', init_value=CteNumNode(value=5), category='var'), VarDeclNode(names=[IdNode(name='y')], var_type='int', init_value=None, category='var'), VarDeclNode(names=[IdNode(name='z')], var_type='int', init_value=ArithmeticOpNode(op='-', left=CteNumNode(value=0), right=CteNumNode(value=3)), category='var')], functions=[], main_body=BodyNode(statements=[AssignNode(var_name='y', expr=MultiplicativeOpNode(op='*', left=ArithmeticOpNode(op='-', left=MultiplicativeOpNode(op='*', left=ArithmeticOpNode(op='+', left=IdNode(name='x'), right=CteNumNode(value=3)), right=CteNumNode(value=2)), right=MultiplicativeOpNode(op='/', left=CteNumNode(value=4), right=CteNumNode(value=2))), right=IdNode(name='z'))), PrintNode(values=[IdNode(name='y')])]))

Symbol Table:
Container: TestExpr
  Parameters:
  Symbols:
  x: int, 14000, var, None
  y: int, 9004, var, None
  z: int, 1000, var, None

