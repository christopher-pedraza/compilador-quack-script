Parse Tree:
program_decl_no_func
  program_pt1	program
  program_pt2
    id	TestLogic
    ;
  var_single_decl_assign
    var
    id	x
    :
    int_type
    =
    factor_cte_num
      int	10
    ;
  var_single_decl_no_assign
    var
    id	flag
    :
    int_type
    ;
  main
  body_statements
    {
    assign
      id	flag
      =
      binary_logical_or
        parenthesis_expresion
          (
          binary_logical_and
            parenthesis_expresion
              (
              binary_comparison
                factor_id
                  id	x
                comparison_op	>
                factor_cte_num
                  int	5
              )
            and
            parenthesis_expresion
              (
              binary_comparison
                factor_id
                  id	x
                comparison_op	<
                factor_cte_num
                  int	20
              )
          )
        or
        parenthesis_expresion
          (
          binary_comparison
            factor_id
              id	x
            comparison_op	==
            factor_cte_num
              int	0
          )
      ;
    print_single
      print
      (
      factor_id
        id	flag
      )
      ;
    }
  end

IR:
ProgramNode(name='TestLogic', global_decls=[VarDeclNode(names=[IdNode(name='x')], var_type='int', init_value=CteNumNode(value=10), category='var'), VarDeclNode(names=[IdNode(name='flag')], var_type='int', init_value=None, category='var')], functions=[], main_body=BodyNode(statements=[AssignNode(var_name='flag', expr=LogicalOrNode(op='and', left=LogicalAndNode(op='and', left=ComparisonNode(op='>', left=IdNode(name='x'), right=CteNumNode(value=5)), right=ComparisonNode(op='<', left=IdNode(name='x'), right=CteNumNode(value=20))), right=ComparisonNode(op='==', left=IdNode(name='x'), right=CteNumNode(value=0)))), PrintNode(values=[IdNode(name='flag')])]))

Symbol Table:
Container: TestLogic
  Parameters:
  Symbols:
  x: int, 14000, var, None
  flag: int, 9004, var, None

