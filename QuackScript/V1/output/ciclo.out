Parse Tree:
program_decl_no_func
  program_pt1	program
  program_pt2
    id	TestWhile
    ;
  var_single_decl_assign
    var
    id	i
    :
    int_type
    =
    factor_cte_num
      int	1
    ;
  main
  body_statements
    {
    cycle
      while
      (
      binary_comparison
        factor_id
          id	i
        comparison_op	<=
        factor_cte_num
          int	5
      )
      do
      body_statements
        {
        print_single
          print
          (
          factor_id
            id	i
          )
          ;
        assign
          id	i
          =
          exp_plus
            factor_id
              id	i
            +
            factor_cte_num
              int	1
          ;
        }
      ;
    }
  end

IR:
ProgramNode(name='TestWhile', global_decls=[VarDeclNode(names=[IdNode(name='i')], var_type='int', init_value=CteNumNode(value=1), category='var')], functions=[], main_body=BodyNode(statements=[WhileNode(condition=ComparisonNode(op='<=', left=IdNode(name='i'), right=CteNumNode(value=5)), body=BodyNode(statements=[PrintNode(values=[IdNode(name='i')]), AssignNode(var_name='i', expr=ArithmeticOpNode(op='+', left=IdNode(name='i'), right=CteNumNode(value=1)))]))]))

Symbol Table:
Container: TestWhile
  Parameters:
  Symbols:
  i: int, 9001, var, None

